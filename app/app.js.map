{"version":3,"sources":["app.module.js","config.js","main.js","cards.js","login.js","additem.js","directives.js","cards.service.js","login.service.js","additem.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChntjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/* \n File     : app.js\n Date     : Sep 28, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n'use strict';\n\nangular.module('flashcards', []);","/* \n File     : config.js\n Date     : Oct 7, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n'use strict';\n\nangular.module('flashcards')\n    .config(['$sceDelegateProvider', function($sceDelegateProvider) {\n        \n  // We must whitelist the JSONP endpoint that we are using to show that we trust it\n  $sceDelegateProvider.resourceUrlWhitelist([\n    'self',\n    'http://phoenixjaymes.com/data/**'\n  ]);\n}]);\n","/* \n File     : main.js\n Date     : Sep 28, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('flashcards')\n    .controller('Main', function($scope) {\n      $scope.loggedIn = false;\n      $scope.displayLogin = false;\n      $scope.displayOptions = false;\n      $scope.displayAddPhrase = false;\n      $scope.displayAddVerb = false;\n      $scope.displayAddWord = false;\n      $scope.displayUpdateWord = false;\n      $scope.displayAddCategory = false;\n      $scope.displayRegister = false;\n      \n      \n      $scope.showOptions = function() {\n        // Check if user is logged in\n        if ($scope.loggedIn === false) {\n          \n          $scope.displayLogin = true;\n          \n          \n          // temp Success on login\n          //$scope.loggedIn = true;\n          \n          \n        } else if ($scope.loggedIn === true) {\n          //\n          $scope.displayOptions = !$scope.displayOptions;\n        }\n      };\n      \n      \n      // Logging in and logging out\n      $scope.logOut = function() {\n        // Looged out\n        // create login service\n        $scope.loggedIn = false;\n        // Hide options\n        $scope.displayOptions = false;\n      };\n      \n      \n      // Display admin forms\n      $scope.displayForm = function(form) {\n        if(form === 'addcategory') {\n          $scope.displayAddPhrase = false;\n          $scope.displayAddVerb = false;\n          $scope.displayAddWord = false;\n          $scope.displayUpdateWord = false;\n          $scope.displayAddCategory = true;\n          $scope.displayOptions = false;\n        } else if (form === 'addphrase') {\n          $scope.displayAddPhrase = true;\n          $scope.displayAddVerb = false;\n          $scope.displayAddWord = false;\n          $scope.displayUpdateWord = false;\n          $scope.displayAddCategory = false;\n          $scope.displayOptions = false;\n        } else if (form === 'addword') {\n          $scope.displayAddPhrase = false;\n          $scope.displayAddVerb = false;\n          $scope.displayAddWord = true;\n          $scope.displayUpdateWord = false;\n          $scope.displayAddCategory = false;\n          $scope.displayOptions = false;\n          \n        } else if (form === 'updateword') {\n          $scope.displayAddPhrase = false;\n          $scope.displayAddVerb = false;\n          $scope.displayAddWord = false;\n          $scope.displayUpdateWord = true;\n          $scope.displayAddCategory = false;\n          $scope.displayOptions = false;\n        } else if (form === 'addverb') {\n          $scope.displayAddPhrase = false;\n          $scope.displayAddVerb = true;\n          $scope.displayAddWord = false;\n          $scope.displayUpdateWord = false;\n          $scope.displayAddCategory = false;\n          $scope.displayOptions = false;\n        }\n      };\n      \n      \n      // Close modal windows\n      $scope.$on('closeModal', function(evt) {\n        $scope.displayLogin = false;\n        $scope.displayAddPhrase = false;\n        $scope.displayAddVerb = false;\n        $scope.displayAddWord = false;\n        $scope.displayUpdateWord = false;\n        $scope.displayAddCategory = false;\n        $scope.displayRegister = false;\n      });\n      \n      \n      // Login to options\n      $scope.$on('loginClick', function(evt, args) {\n        \n        if (args === true) {\n          $scope.loggedIn = true;\n          $scope.displayLogin = false;\n          $scope.displayFormMessage = false;\n        } else if (args === 'incorrect') {\n          \n          console.log('Please fill in all form fields.');\n          \n        } else if (args === 'match') {\n          \n          console.log('Learner or password incorrect.');\n          \n        } else if (args === 'register') {\n          \n          $scope.displayLogin = false;\n          $scope.displayRegister = true;\n          \n          console.log('Please register.');\n        } else {\n          console.log('Unable to log you in at this time.');\n        }\n      });\n      \n      // Register click\n      $scope.$on('registerClick', function(evt, args) {\n        if (args === true) {\n          $scope.loggedIn = true;\n          $scope.displayRegister = false;\n          $scope.displayFormMessage = false;\n        } else if (args === 'incorrect') {\n          \n          console.log('Please fill in all form fields.');\n        } else if (args === 'password') {\n          \n          console.log('Passwords are not the same');\n        } else if (args === false) {\n          \n          console.log('Unable to register you at this time.');\n        }\n      });\n      \n      \n      // Add category\n      $scope.$on('addCategoryClick', function(evt, args) {\n//        if(args === true) {\n//          console.log('Category added successfully.');\n//        } else if (args ===  'incorrect') {\n//          console.log('Please fill in all form fields.');\n//        } else if (args === 'duplicate') {\n//          console.log('This category already exist.');\n//        } else if (args === false) {\n//          console.log('Unable to add category at this time.');\n//        }\n      });\n      \n      \n      // Add word\n      $scope.$on('addWordClick', function(evt, args) {\n        \n        if(args === true) {\n          console.log('Word added successfully.');\n        } else if (args ===  'incorrect') {\n          console.log('Please fill in all form fields.');\n        } else if (args === false) {\n          console.log('Unable to add word at this time.');\n        }\n      });\n      \n      \n      // Add Phrase\n      $scope.$on('addPhraseClick', function(evt, args) {\n        if(args === true) {\n          console.log('Phrase added successfully.');\n        } else if (args ===  'incorrect') {\n          console.log('Please fill in all form fields.');\n        } else if (args === 'duplicate') {\n          console.log('This phrase already exist.');\n        } else if (args === false) {\n          console.log('Unable to add phrase at this time.');\n        }\n      });\n      \n      \n      // Update word\n      $scope.$on('updateWordClick', function(evt) {\n        // temp Success update word\n        //$scope.displayUpdateWord = false;\n      });\n      \n});","/* \n File     : cards.js\n Date     : Sep 28, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('flashcards')\n    .controller('Cards', function($scope, $timeout, $sce, cardsService) {\n      // Default card\n      $scope.cards = [{\n        \"translation\" : \"Germany\",\n        \"english\"     : \"Deutschland\",\n        \"img\"         : \"flashcard-germany.svg\",\n        \"pos\"         : \"noun\",\n        \"gender\"      : \"m\"\n      }];\n      $scope.currentCard = 1;\n      $scope.totalCards = $scope.cards.length;\n      $scope.flip = false;\n      \n      // Get categories from service\n      var getAllCategories = function() {\n        cardsService.getCategories(function(response) {\n          $scope.cardAllCategories = response.data;\n        });\n      };\n      \n      // Change category options\n      // If pos is verb get verbs until verbs have categories\n      $scope.changeCategory = function(cardPos) {\n        if (cardPos === 'verb') {\n          $scope.getCards(cardPos);\n        } else if (cardPos === 'phrase') {\n          $scope.getCards(cardPos);\n        } else if (cardPos === 'mixed') {\n          $scope.getCards(cardPos);\n        } else {\n          $scope.posCategory = $scope.cardAllCategories[cardPos];\n        }\n      };\n      \n      // Set card\n      var setCard = function(card) {\n        // Reset card\n        $scope.flip = false;\n        \n        if ($scope.cardPos === 'verb') {\n          // Wait for card to flip over\n          $timeout(function() {\n            $scope.english = $scope.cards[card].english;\n            $scope.translation = $sce.trustAsHtml($scope.cards[card].translation);\n            $scope.ich = $scope.cards[card].ich;\n            $scope.du = $scope.cards[card].du;\n            $scope.er_sie_es = $scope.cards[card].er_sie_es;\n            $scope.wir = $scope.cards[card].wir;\n            $scope.ihr = $scope.cards[card].ihr;\n            $scope.sie_Sie = $scope.cards[card].sie_Sie;\n            \n            $scope.image = $scope.cards[card].img;\n            $scope.gender = $scope.cards[card].gender;\n            \n          }, 500);\n        } else if ($scope.cardPos === 'phrase') {\n          // Wait for card to flip over\n          $timeout(function() {\n            $scope.english = $sce.trustAsHtml($scope.cards[card].english);\n            $scope.translation = $sce.trustAsHtml($scope.cards[card].translation);\n            $scope.image = $scope.cards[card].img;\n            $scope.gender = $scope.cards[card].gender;\n          }, 500);\n        } else {\n          // Wait for card to flip over\n          $timeout(function() {\n            $scope.english = $scope.cards[card].english;\n            $scope.translation = $sce.trustAsHtml($scope.cards[card].translation);\n            $scope.image = $scope.cards[card].img;\n            $scope.gender = $scope.cards[card].gender;\n          }, 500);\n        }  \n      };\n      \n      \n      // Get cards\n      $scope.getCards = function(pos, category) {\n        cardsService.getWords(pos, category, function(response) {\n          $scope.cards = response.data;\n\n          $scope.totalCards = $scope.cards.length;\n          \n          // Reset current card and set card\n          $scope.currentCard = 1;\n          setCard(0);\n          \n        });\n      };\n      \n      \n      // Go to next card\n      $scope.nextCard = function() {\n        // Check if number is out of bounds\n        if ($scope.currentCard >= $scope.totalCards) {\n          $scope.currentCard = 1;\n        } else {\n          $scope.currentCard++;\n        }\n        \n        setCard($scope.currentCard - 1);\n      };\n      \n      \n      // Go to previous card\n      $scope.prevCard = function() {\n        // Check if number is out of bounds\n        if ($scope.currentCard <= 1) {\n          $scope.currentCard = $scope.totalCards;\n        } else {\n          $scope.currentCard--;\n        }\n        \n        setCard($scope.currentCard - 1);\n      };\n      \n      // Flip front of card to back\n      $scope.$on('cardFrontFlip', function(evt, args) {\n        $scope.flip = args;\n      });\n      \n      \n      // Flip back of card to front\n      $scope.$on('cardBackFlip', function(evt, args) {\n        $scope.flip = args;\n      });\n      \n      // Set initial card\n      setCard(0);\n      \n      // Get categories\n      getAllCategories();\n});","/* \n File     : login.js\n Date     : Oct 22, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('flashcards')\n  .controller('Login', function($scope, adminService) {\n    $scope.learner = {};\n    $scope.responseMessage;\n    $scope.displayFormMessage = false;\n\n    // Login\n    $scope.loginLearner = function() {\n      $scope.displayFormMessage = false;\n      adminService.loginLearner($scope.learner, function(response) {\n\n        if(response.data.success === true) {\n          $scope.responseMessage = 'You have been logged in.';\n          $scope.displayFormMessage = true;\n          $scope.$emit('loginClick', true);\n        } else if (response.data.success === 'incorrect') {\n          $scope.responseMessage = 'Please fill in all form fields.';\n          $scope.displayFormMessage = true;\n          $scope.$emit('loginClick', 'incorrect');\n        } else if (response.data.success === 'match') {\n          $scope.responseMessage = 'Learner or password incorrect.';\n          $scope.displayFormMessage = true;\n          $scope.$emit('loginClick', 'match');\n        } else if (response.data.success === 'register') {\n          $scope.responseMessage = 'Please register';\n          $scope.displayFormMessage = true;\n          $scope.$emit('loginClick', 'register');\n        } else if (response.data.success === false) {\n          $scope.responseMessage = 'Unable to log you in at this time.';\n          $scope.displayFormMessage = true;\n          $scope.$emit('loginClick', false);\n        }\n      });\n    };\n\n\n    // Register user\n    $scope.registerLearner = function() {\n      $scope.displayFormMessage = false;\n      adminService.registerLearner($scope.newLearner, function(response) {\n\n        if (response.data.success === true) {\n          $scope.responseMessage = 'You have been sucessfully registered.';\n          $scope.displayFormMessage = true;\n          $scope.$emit('registerClick', true);\n        } else if(response.data.success === 'incorrect') {\n          $scope.responseMessage = 'Please fill in all form fields.';\n          $scope.displayFormMessage = true;\n          $scope.$emit('registerClick', 'incorrect');\n        } else if(response.data.success === 'password') {\n          $scope.responseMessage = 'Passwords are not the same';\n          $scope.displayFormMessage = true;\n          $scope.$emit('registerClick', 'password');\n        } else if (response.data.success === false) {\n          $scope.responseMessage = 'Unable to register you at this time.';\n          $scope.displayFormMessage = true;\n          $scope.$emit('addWordClick', false);\n          \n        }\n      });  \n    };\n});\n","/* \n File     : addword.js\n Date     : Oct 23, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('flashcards')\n  .controller('AddItem', function($scope, cardsService, addItemService) {\n    $scope.word = {};\n    $scope.verb = {\"pos\": \"verb\"};\n    $scope.category = {\"pos\": \"category\"};\n    $scope.phrase = {\"pos\" : \"phrase\"};\n    $scope.posCategories;\n    $scope.genderCategories;\n    $scope.responseMessage;\n    $scope.displayFormMessage = false;\n      \n    // Change category options\n    $scope.getCategories = function(wordPos) {\n\n      if ($scope.posCategories === undefined) {\n        cardsService.getAllCategories(function(response) {\n          \n          $scope.posCategories = response.data.word;\n          $scope.genderCategories = response.data.gender;\n\n          \n          // change gender for adjectives, to none\n\n        });\n      }\n    };\n\n    // Add word\n    $scope.addItem = function() {\n      $scope.displayFormMessage = false;\n      \n      addItemService.addItem($scope.word, function(response) {\n        // Check response message\n        if(response.data.success === true) {\n          displayMessage('true');\n          $scope.$emit('addItemClick', true);\n          \n          // Clear form\n          $scope.word.translation = '';\n          $scope.word.english = '';\n          $scope.word.img = '';\n        } else if (response.data.success === 'duplicate') {\n          displayMessage('duplicate');\n          $scope.$emit('addItemClick', 'duplicate');\n        } else if (response.data.success === 'incorrect') {\n          displayMessage('incorrect');\n          $scope.$emit('addItemClick', 'incorrect');\n        } else if (response.data.success === false) {\n          displayMessage('false');\n          $scope.$emit('addItemClick', false);\n        }\n      });\n    }; \n    \n    \n    // Add verb\n    $scope.addVerb = function() {\n      $scope.displayFormMessage = false;\n      \n      addItemService.addItem($scope.verb, function(response) {\n        // Check response message\n        if(response.data.success === true) {\n          displayMessage('true');\n          $scope.$emit('addVerbClick', true);\n        } else if (response.data.success === 'duplicate') {\n          displayMessage('duplicate');\n          $scope.$emit('addVerbClick', 'duplicate');\n        } else if (response.data.success === 'incorrect') {\n          displayMessage('incorrect');\n          $scope.$emit('addVerbClick', 'incorrect');\n        } else if (response.data.success === false) {\n          displayMessage('false');\n          $scope.$emit('addVerbClick', false);\n        }\n      });\n    };\n    \n    \n    // Add category\n    $scope.addCategory = function() {\n      $scope.displayFormMessage = false;\n      \n      addItemService.addItem($scope.category, function(response) {\n        // Check response message\n        if(response.data.success === true) {\n          displayMessage('true');\n          $scope.$emit('addCategoryClick', true);\n        } else if (response.data.success === 'duplicate') {\n          displayMessage('duplicate');\n          $scope.$emit('addCategoryClick', 'duplicate');\n        } else if (response.data.success === 'incorrect') {\n          displayMessage('incorrect');\n          $scope.$emit('addCategoryClick', 'incorrect');\n        } else if (response.data.success === false) {\n          displayMessage('false');\n          $scope.$emit('addCategoryClick', false);\n        }\n      });\n    };\n    \n    \n    // Add Phrase\n    $scope.addPhrase = function() {\n      $scope.displayFormMessage = false;\n      \n      addItemService.addItem($scope.phrase, function(response) {\n        // Check response message\n        if(response.data.success === true) {\n          displayMessage('true');\n          $scope.$emit('addPhraseClick', true);\n        } else if (response.data.success === 'incorrect') {\n          displayMessage('incorrect');\n          $scope.$emit('addPhraseClick', 'incorrect');\n        } else if (response.data.success === 'duplicate') {\n          displayMessage('duplicate');\n          $scope.$emit('addPhraseClick', 'duplicate');\n        } else if (response.data.success === false) {\n          displayMessage('false');\n          $scope.$emit('addPhraseClick', false);\n        }\n      });\n    };\n    \n    \n    // Display message\n    var displayMessage = function(message) {\n      var objMessages = {\n        'true' : 'Item added successfully.',\n        'incorrect' : 'Please fill in all form fields.',\n        'duplicate' : 'This item already exist.',\n        'false' : 'Unable to add item at this time.'\n      };\n      \n      $scope.responseMessage = objMessages[message];\n      $scope.displayFormMessage = true;\n    };\n    \n});","/* \n File     : directives.js\n Date     : Sep 28, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('flashcards')\n  .directive('home', function() {\n    return {\n      templateUrl : 'app/views/home.html'\n    };\n  })\n  .directive('cards', function() {\n    return {\n      templateUrl : 'app/views/cards.html',\n      controller  : 'Cards'\n    };\n  })\n  .directive('login', function() {\n    return {\n      templateUrl : 'app/views/partials/login.html',\n      controller : 'Login'\n    };\n  })\n  .directive('addword', function() {\n    return {\n      templateUrl : 'app/views/partials/add-word.html',\n      controller : 'AddItem'\n    };\n  })\n  .directive('addverb', function() {\n    return {\n      templateUrl : 'app/views/partials/add-verb.html',\n      controller : 'AddItem'\n    };\n  })\n  .directive('updateword', function() {\n    return {\n      templateUrl : 'app/views/partials/update-word.html'\n    };\n  })\n  .directive('addcategory', function() {\n    return {\n      templateUrl : 'app/views/partials/add-category.html',\n      controller : 'AddItem'\n    };\n  })\n  .directive('addphrase', function() {\n    return {\n      templateUrl : 'app/views/partials/add-phrase.html',\n      controller : 'AddItem'\n    };\n  })\n  .directive('register', function() {\n    return {\n      templateUrl : 'app/views/partials/register.html',\n      controller : 'Login'\n    };\n  })\n  .directive('closebutton', function() {\n    return {\n      templateUrl : 'app/views/partials/btn-close.html'\n    };\n  })\n  .directive('formmessage', function() {\n    return {\n      templateUrl : 'app/views/partials/form-message.html'\n    };\n  })\n  .directive('verbcard', function() {\n    return {\n      templateUrl : 'app/views/partials/verb-card.html'\n    };\n  })\n  .directive('phrasecard', function() {\n    return {\n      templateUrl : 'app/views/partials/phrase-card.html'\n    };\n  })\n  .directive('genericcard', function() {\n    return {\n      templateUrl : 'app/views/partials/generic-card.html'\n    };\n  });\n  \n  \n","/* \n File     : words.service.js\n Date     : Sep 28, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('flashcards')\n    .service('cardsService', function($http) {\n            \n      // Get words\n      this.getWords = function(pos, category, callback) {\n        \n        if (pos === 'adjective') {\n          var url = 'assets/inc/fc-german.php?pos=' + pos + '&category=' + category;\n        } else if (pos === 'noun') {\n          var url = 'assets/inc/fc-german.php?pos=' + pos + '&category=' + category;\n        } else if (pos === 'verb') {\n          var url = 'assets/inc/fc-german.php?pos=' + pos;\n        } else if (pos === 'phrase') {\n          var url = 'assets/inc/fc-german.php?pos=' + pos;\n        } else if (pos === 'mixed') {\n          var url = 'assets/inc/fc-german.php?pos=' + pos;\n        } else {\n          var url = 'assets/inc/fc-german.php?pos=noun&category=' + 1;\n        }\n        \n        $http.get(url).then(callback); \n      };\n      \n      this.getCategories = function(callback) {\n        var url = 'assets/inc/fc-german-categories.php';\n        $http.get(url).then(callback);\n      };\n      \n      this.getAllCategories = function(callback) {\n        var url = 'assets/inc/fc-german-categories.php?type=all';\n        $http.get(url).then(callback);\n      };\n});\n","/* \n File     : words.service.js\n Date     : Sep 28, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('flashcards')\n    .service('adminService', function($http, $httpParamSerializerJQLike) {\n      \n      \n      // Login learner\n      this.loginLearner = function(learner, callback) {\n        var url = 'assets/inc/fc-login.php';\n        var config = {headers: {'Content-Type': 'application/x-www-form-urlencoded'}};\n        \n        $http.post(url, $httpParamSerializerJQLike(learner), config).then(callback); \n      };\n      \n      \n      // Register new learner\n      this.registerLearner = function(newLearner, callback) {\n        var url = 'assets/inc/fc-register.php';\n        var config = {headers: {'Content-Type': 'application/x-www-form-urlencoded'}};\n        \n        $http.post(url, $httpParamSerializerJQLike(newLearner), config).then(callback);\n      };\n      \n});\n","/* \n File     : words.service.js\n Date     : Sep 28, 2016\n Author   : Jaymes Young <jaymes@phoenixjaymes.com>\n */\n\n'use strict';\n\nangular.module('flashcards')\n  .service('addItemService', function($http, $httpParamSerializerJQLike) {\n\n\n    // Login learner\n    this.addItem = function(item, callback) {\n      var url = 'assets/inc/fc-add-item.php';\n      var config = {headers: {'Content-Type': 'application/x-www-form-urlencoded'}};\n\n      $http.post(url, $httpParamSerializerJQLike(item), config).then(callback); \n    };\n      \n});\n"],"sourceRoot":"/source/"}